author: "dterletskiy"
version: "1.1.0"
umbs_min_version: "0.1"

include: "variables.yaml"



variables:
  DIRECTORIES:
    # Current variable (DIRECTORIES.ROOT) could be changed during runtime initializetion in case if 'root_dir' parameter
    # defined in configuration file or command line parameter
    ROOT: "/mnt/docker/builder_arm64v8_ubuntu_22.04/"
    SOURCE: ${DIRECTORIES.ROOT}/source/
    BUILD: ${DIRECTORIES.ROOT}/build/
    DEPLOY: ${DIRECTORIES.ROOT}/deploy/
    TEST: ${DIRECTORIES.ROOT}/_____/${DIRECTORIES.SOURCE}/_____/${DIRECTORIES.BUILD}/_____/${DIRECTORIES.DEPLOY}/
  XEN:
    SOURCE:
      GITHUB:
        URL: "https://github.com/xen-project/xen.git"
        BRANCH: "RELEASE-4.16.2"
    CONFIG:
      ARM: defconfig
      ARM64: defconfig
      X86: qemu-defconfig
      X86_64: qemu-defconfig
  UBOOT:
    SOURCE:
      GITHUB:
        URL: "https://github.com/u-boot/u-boot.git"
        BRANCH: "v2022.07"
    CONFIG:
      ARM: umbs_qemu_arm_defconfig
      ARM64: umbs_qemu_arm64_defconfig
      X86: umbs_qemu-x86_defconfig
      X86_64: umbs_qemu-x86_64_defconfig
  BUSYBOX:
    SOURCE:
      GITHUB:
        URL: "https://github.com/mirror/busybox.git"
        BRANCH: "1_36_0"
    CONFIG:
      ARM: umbs_defconfig
      ARM64: umbs_defconfig
      X86: umbs_defconfig
      X86_64: umbs_defconfig
  BUILDROOT:
    SOURCE:
      GITHUB:
        URL: "https://github.com/buildroot/buildroot.git"
        BRANCH: "2023.02"
    CONFIG:
      ARM: umbs_qemu_arm_vexpress_defconfig
      ARM64: umbs_qemu_aarch64_virt_defconfig
      X86: umbs_qemu_x86_defconfig
      X86_64: umbs_qemu_x86_64_defconfig
  KERNEL:
    SOURCE:
      GITHUB:
        URL: "https://github.com/torvalds/linux.git"
        BRANCH: "v6.2"
    CONFIG:
      ARM: vexpress_defconfig
      ARM64: umbs_defconfig
      X86: x86_64_defconfig
      X86_64: x86_64_defconfig
  ANDROID:
    UBOOT:
      SOURCE:
        GITHUB:
          URL: "https://github.com/dterletskiy/aosp_manifest.git"
          BRANCH: "u-boot/manifest/u-boot-mainline-9671786"
      CONFIG:
        ARM64: "//u-boot:qemu_aarch64"
    KERNEL:
      SOURCE:
        GITHUB:
          URL: "https://github.com/dterletskiy/aosp_manifest.git"
          BRANCH: "kernel/manifest/common-android14-6.1-dev"
      CONFIG:
        ARM64: "//common-modules/virtual-device:virtual_device_aarch64"
  UBUNTU:
    VERSION: 22.04
    DOCKER:
      DOCKERFILE: "tda/lfs/configuration/docker/Dockerfile"
    ROOTFS:
      NAME:
        COMMON: ubuntu-base-${UBUNTU.VERSION}.2-base
        ARM64: ${UBUNTU.ROOTFS.NAME.COMMON}-arm64
        X86_64: ${UBUNTU.ROOTFS.NAME.COMMON}-amd64
      SOURCE:
        COMMON: http://cdimage.ubuntu.com/ubuntu-base/releases/
        ARM64: ${UBUNTU.ROOTFS.SOURCE.COMMON}/${UBUNTU.VERSION}/release/${UBUNTU.ROOTFS.NAME.ARM64}.tar.gz
        X86_64: ${UBUNTU.ROOTFS.SOURCE.COMMON}/${UBUNTU.VERSION}/release/${UBUNTU.ROOTFS.NAME.X86_64}.tar.gz
    USER: &UBUNTU_USER_ALIAS
      uid: 1000
      gid: 1000
      name: builder
      password: builder
      password_salt: redliub
      hashed_password: redegKmAeDwAM
      workdir: workspace

    PACKAGES: &PACKAGES_ALIAS
      SYSTEM: &PACKAGES_SYSTEM_ALIAS
        BASE: &PACKAGES_SYSTEM_BASE_ALIAS
          - locales
          - apt-utils
          - autoconf
          - fakeroot
          - devscripts
          - lsb-base
          - lsb-release
          - sudo
          - udev
          - rsyslog
          - kmod
          - util-linux
          - dmsetup
          - hostname
          - uuid
          - uuid-dev
          - symlinks
          - psmisc
          - bc
          - sysfsutils
          - software-properties-common
          - whois
          # - dialog
        DRIVERS: &PACKAGES_SYSTEM_DRIVERS_ALIAS
          - mtd-utils
          - iiod
        TRACE: &PACKAGES_SYSTEM_TRACE_ALIAS
          - blktrace
          - fatrace
          - latrace
          - strace
          - ltrace
          - xtrace
        TOP: &PACKAGES_SYSTEM_TOP_ALIAS
          - atop
          - htop
          - iotop
          - iftop
          - powertop
          - itop
          - kerneltop
          - dnstop
          - jnettop
          - sntop
          - latencytop
          - xrestop
          - slabtop
        SYSTEMD: &PACKAGES_SYSTEM_SYSTEMD_ALIAS
          - systemd
          - systemd-sysv
          - libsystemd-dev
          - sysvinit-utils
      NET: &PACKAGES_NET_ALIAS
        - netbase
        - dnsutils
        - ifupdown
        - iproute2
        - net-tools
        - isc-dhcp-client
        - isc-dhcp-common
        - iputils-ping
        - dhcpcd5
        - tcpd
        - bridge-utils
        - ethtool
        - iptables
        - libnss-mdns
        - iw
        - tcptrace
        - tcptraceroute
        - nfstrace
        - nfstrace-doc
        - iptraf
        - nload
        - nethogs
        - iptstate
        - curl
        - rsync
        - ssh
        - openssh-server
        - socat
      DEV: &PACKAGES_DEV_ALIAS
        BASE: &PACKAGES_BASE_ALIAS
          - build-essential
          - gcc
          - g++
          - ncurses-dev
          - iasl
          - binutils
          - binutils-common
          - binutils-dev
          - binutils-doc
          - binutils-for-build
          - binutils-for-host
          - device-tree-compiler
          - pkg-config
          - binwalk
          - graphviz
          - linux-headers-generic
        SYNTAX: &PACKAGES_DEV_SYNTAX_ALIAS
          - flex
          - flex-doc
          - flex++
          - bison
          - antlr
          - antlr-doc
          - antlr3
          - antlr3-doc
          - antlr3.2
          - antlr3.2-doc
          - antlr4
          - antlr4-doc
        PYTHON: &PACKAGES_DEV_PYTHON_ALIAS
          - python2
          - python2-dev
          - python2-doc

          - python3
          - python3-dev
          - python3-doc
          - python3-pip

          - python3-yaml
          - python3-filetype
          - python3-paramiko
          - python3-coloredlogs
          - python3-antlr
          - python3-antlr3
        PERL: &PACKAGES_DEV_PERL_ALIAS
          - perl
          - perl-doc
          - perl-doc-html
        SCV: &PACKAGES_DEV_SCV_ALIAS
          - git
          - gitk
          - patch
        BUILD_SYSTEM: &PACKAGES_DEV_BUILD_SYSTEM_ALIAS
          - cmake
          - ninja-build
        LIBS: &PACKAGES_DEV_LIBS_ALIAS
          - libssl-dev
          - libelf-dev
          - libfdt-dev
          - libpixman-1-dev
          - libyajl-dev
          - libncurses-dev
          - libcap-ng-dev
          - libiscsi-dev 
          - libibverbs-dev
          - libiio-dev

          - libglib2.0-dev
          - libglib2.0-dev-bin

          - libdrm-common
          - libdrm-dev
          - libdrm-tests
          - libdrm2

          - libsdl2-dev
          - libsdl2-doc
      TOOLS: &PACKAGES_TOOLS_ALIAS
        - mc
        - nano
        - vim
        - less
        - sed
        - bash-completion
        - screen
        - tmux
      COMPRESSION: &PACKAGES_COMPRESSION_ALIAS
        - tar
        - zip
        - unzip
        - rar
        - unrar
        - rarcrack
        - xz-utils
        - cpio
        - zlib1g-dev
      PERIPHERALS: &PACKAGES_PERIPHERALS_ALIAS
        - ser2net
        - minicom



container:
  ubuntu-aarch64:
    type: docker
    name: builder_arm64v8_ubuntu_${UBUNTU.VERSION}
    disposable: true
    image:
      name: builder/arm64v8/ubuntu
      tag: ${UBUNTU.VERSION}
    mapping:
      volume:
        - host: ${DIRECTORIES.ROOT}
          guest: /mnt/host
        - host: ~/.ssh
          guest: /home/${UBUNTU.USER.NAME}/.ssh
        - host: ~/.gitconfig
          guest: /home/${UBUNTU.USER.NAME}/.gitconfig
      port:
        - host: 5000
          guest: 5000



projects:
  ubuntu-aarch64:
    active: false
    project_subdir: None
    builders:
      - type: docker.image
        dockerfile: ${UBUNTU.DOCKER.DOCKERFILE}
        from:
          name: arm64v8/ubuntu
          tag: ${UBUNTU.VERSION}
        image:
          name: builder/arm64v8/ubuntu
          tag: ${UBUNTU.VERSION}
        user: *UBUNTU_USER_ALIAS
        packages: *PACKAGES_ALIAS
        container_name: builder_arm64v8_ubuntu_${UBUNTU.VERSION}

  ubuntu-x86-64:
    active: false
    project_subdir: None
    version: ${UBUNTU.VERSION}
    builders:
      - type: docker.image
        dockerfile: ${UBUNTU.DOCKER.DOCKERFILE}
        from:
          name: ubuntu
          tag: ${UBUNTU.VERSION}
        image:
          name: builder/x86-64/ubuntu
          tag: ${UBUNTU.VERSION}
        user: *UBUNTU_USER_ALIAS
        packages: *PACKAGES_ALIAS
        container_name: builder_x86_64_ubuntu_${UBUNTU.VERSION}

  rootfs-ubuntu-aarch64:
    active: true
    project_subdir: rootfs/ubuntu/aarch64
    sources:
      - type: download
        url: ${UBUNTU.ROOTFS.SOURCE.ARM64}
        subdir: download
    patches:
      - type: unpack
        file: download/${UBUNTU.ROOTFS.NAME.ARM64}.tar.gz
        subdir: rootfs
    builders:
      - type: rootfs.ubuntu
        subdir: rootfs
        user: *UBUNTU_USER_ALIAS
        packages: *PACKAGES_ALIAS
        image:
          file: rootfs.img
          fs: ext4
          size: 4096 MB
          content:
            - action: extract
              from: rootfs/ubuntu/aarch64/download/${UBUNTU.ROOTFS.NAME.ARM64}.tar.gz
              to: "."
            - action: copy
              from: linux/kernel/out/deploy/lib/.
              to: lib

  rootfs-ubuntu-x86-64:
    active: true
    project_subdir: rootfs/ubuntu/x86-64
    sources:
      - type: download
        url: ${UBUNTU.ROOTFS.SOURCE.X86_64}
        subdir: download
    patches:
      - type: unpack
        file: download/${UBUNTU.ROOTFS.NAME.X86_64}.tar.gz
        subdir: rootfs
    builders:
      - type: rootfs.ubuntu
        subdir: rootfs
        user: *UBUNTU_USER_ALIAS
        packages: *PACKAGES_ALIAS
        image:
          file: rootfs.img
          fs: ext4
          size: 4096 MB
          content:
            - action: extract
              from: rootfs/ubuntu/aarch64/download/${UBUNTU.ROOTFS.NAME.X86_64}.tar.gz
              to: "."
            - action: copy
              from: linux/kernel/out/deploy/lib/.
              to: lib

  tda:
    active: true
    project_subdir: tda
    sources:
      - type: git
        url: "git@github.com:dterletskiy/linux_from_scratch.git"
        subdir: lfs
      - type: git
        url: "git@github.com:dterletskiy/umbs.git"
        subdir: umbs
      - type: git
        url: "git@github.com:dterletskiy/python_fw.git"
        subdir: pfw

  xen:
    active: true
    project_subdir: xen
    sources:
      - type: git
        url: ${XEN.SOURCE.GITHUB.URL}
        branch: ${XEN.SOURCE.GITHUB.BRANCH}
    builders:
      - type: make.xen
        subdir: "."
        product_subdir: "out/build"
        deploy_subdir: "out/deploy"
        defconfig: ${XEN.CONFIG.ARM64}
        arch: "arm64"
        compiler: "aarch64-linux-gnu-"
        jobs: 4
        targets:
          - "dist-xen"
          - "dist-doc"
        env:
          - ""
        artifacts:
          - "dist/install/boot/xen"
        deps:
          - ""

  u-boot:
    active: true
    project_subdir: loader/u-boot
    sources:
      - type: git
        url: ${UBOOT.SOURCE.GITHUB.URL}
        branch: ${UBOOT.SOURCE.GITHUB.BRANCH}
    patches:
      - type: copy
        content:
          - from: "tda/lfs/configuration/config/u-boot/v2022.07/qemu_arm64_defconfig/exp/defconfig"
            to: "configs/${UBOOT.CONFIG.ARM64}"
    builders:
      - type: make.uboot
        subdir: "."
        product_subdir: "out/build"
        deploy_subdir: "out/deploy"
        defconfig: ${UBOOT.CONFIG.ARM64}
        arch: "arm64"
        compiler: "aarch64-linux-gnu-"
        jobs: 4
        env:
          - ""
        artifacts:
          - "u-boot"
          - "u-boot.bin"
          - "scripts/dtc/dtc"
          - "tools/dumpimage"
          - "tools/fit_info"
          - "tools/mkenvimage"
          - "tools/mkimage"
          - "tools/img2srec"
        deps:
          - ""

  busybox:
    active: true
    project_subdir: linux/busybox
    sources:
      - type: git
        url: ${BUSYBOX.SOURCE.GITHUB.URL}
        branch: ${BUSYBOX.SOURCE.GITHUB.BRANCH}
    patches:
      - type: copy
        content:
          - from: "tda/lfs/configuration/config/busybox/1.35.0/arm64/exp/.config"
            to: "configs/${BUSYBOX.CONFIG.ARM64}"
    builders:
      - type: make.busybox
        subdir: "."
        product_subdir: "out/build"
        deploy_subdir: "out/deploy"
        defconfig: ${BUSYBOX.CONFIG.ARM64}
        arch: "arm64"
        compiler: "aarch64-linux-gnu-"
        jobs: 4
        env:
          - ""
        artifacts:
          - "_install"
        deps:
          - ""

  buildroot:
    active: true
    project_subdir: linux/buildroot
    sources:
      - type: git
        url: ${BUILDROOT.SOURCE.GITHUB.URL}
        branch: ${BUILDROOT.SOURCE.GITHUB.BRANCH}
    patches:
      - type: copy
        content:
          - from: "tda/lfs/configuration/config/buildroot/2022.05.2/qemu_aarch64_virt_defconfig/exp/defconfig"
            to: "configs/${BUILDROOT.CONFIG.ARM64}"
    builders:
      - type: make.buildroot
        subdir: "."
        product_subdir: "out/build"
        deploy_subdir: "out/deploy"
        defconfig: ${BUILDROOT.CONFIG.ARM64}
        arch: "arm64"
        compiler: "aarch64-linux-gnu-"
        jobs: 4
        env:
          - ""
        artifacts:
          - "output/images/rootfs.cpio"
          - "output/images/rootfs.ext2"
        deps:
          - ""

  kernel:
    active: true
    project_subdir: linux/kernel
    sources:
      - type: git
        url: ${KERNEL.SOURCE.GITHUB.URL}
        branch: ${KERNEL.SOURCE.GITHUB.BRANCH}
    patches:
      - type: copy
        content:
          - from: "tda/lfs/configuration/config/kernel/6.2/arm64/exp/defconfig"
            to: "arch/arm64/configs/${KERNEL.CONFIG.ARM64}"
    builders:
      - type: make.kernel
        subdir: "."
        product_subdir: "out/build"
        deploy_subdir: "out/deploy"
        defconfig: ${KERNEL.CONFIG.ARM64}
        arch: "arm64"
        compiler: "aarch64-linux-gnu-"
        jobs: 4
        env:
          - ""
        artifacts:
          - "out/deploy/vmlinuz-6.2.0"
          - "out/deploy/lib"
        deps:
          - ""

  android-u-boot:
    active: false
    project_subdir: android/u-boot
    sources:
      - type: repo
        manifest-url: ${ANDROID.UBOOT.SOURCE.GITHUB.URL}
        manifest-branch: ${ANDROID.UBOOT.SOURCE.GITHUB.BRANCH}
        manifest-name: "default.xml"
    builders:
      - type: android.uboot
        config: ${ANDROID.UBOOT.CONFIG.ARM64}
        env:
          - ""
        artifacts:
          - "out/deploy/${ANDROID.UBOOT.CONFIG.ARM64}/u-boot"
          - "out/deploy/${ANDROID.UBOOT.CONFIG.ARM64}/u-boot.bin"
        deps:
          - ""

  android-kernel:
    active: false
    project_subdir: android/kernel
    sources:
      - type: repo
        manifest-url: ${ANDROID.KERNEL.SOURCE.GITHUB.URL}
        manifest-branch: ${ANDROID.KERNEL.SOURCE.GITHUB.BRANCH}
        manifest-name: "default.xml"
    builders:
      - type: android.kernel
        config: ${ANDROID.KERNEL.CONFIG.ARM64}
        env:
          - ""
        artifacts:
          - "out/deploy/${ANDROID.KERNEL.CONFIG.ARM64}/boot.img"
          - "out/deploy/${ANDROID.KERNEL.CONFIG.ARM64}/Image"
          - "out/deploy/${ANDROID.KERNEL.CONFIG.ARM64}/initramfs.img"
          - "out/deploy/${ANDROID.KERNEL.CONFIG.ARM64}/vmlinux"
        deps:
          - ""

  image-boot:
    active: true
    project_subdir: images/boot
    patches:
      - type: mkscr
        source: "tda/lfs/configuration/scripts/boot.scr/main.scr"
        out: "boot.scr"
        artifacts:
          - "boot.scr"
      - type: mkimage
        exe: "loader/u-boot/tools/mkimage"
        sources:
          - "linux/kernel/arch/arm64/boot/Image"
        out: "linux/kernel/kernel.uimg"
        arch: "arm64"
        os: "linux"
        img_type: "kernel"
        name: "kernel"
        load_addr: 0x40000000
        compression: "none"
        artifacts:
          - "linux/kernel/kernel.uimg"
        deps:
          - "loader/u-boot/tools/mkimage"
          - "linux/kernel/arch/arm64/boot/Image"
    builders:
      - type: image.partition
        file: "boot.img"
        fs: ext4
        size: 256 MB
        content:
          - from: "loader/u-boot/u-boot.bin"
            to: "linux/boot/u-boot.bin"
          - from: "linux/kernel/arch/arm64/boot/Image"
            to: "linux/kernel/kernel"
        artifacts:
          - "boot.img"
        deps:
          - ""

  image-rootfs:
    active: true
    project_subdir: images/rootfs
    builders:
      - type: image.partition
        file: rootfs.img
        fs: ext4
        size: 4096 MB
        content:
          - action: extract
            from: rootfs/ubuntu/aarch64/download/${UBUNTU.ROOTFS.NAME.ARM64}.tar.gz
            to: "."
          - action: copy
            from: linux/kernel/out/deploy/lib/.
            to: lib
        artifacts:
          - rootfs.img
        deps:
          - ""

  image-main:
    active: true
    project_subdir: images/main
    builders:
      - type: image.drive
        file: "main.img"
        partitions:
          - label: boot
            file: "images/boot/boot.img"            
          - label: data
            size: 1024 MB
            fs: ext4
        artifacts:
          - "main.img"
        deps:
          - ""


